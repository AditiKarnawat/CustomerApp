package SecondPackage;
import java.util.Comparator;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
class Customer implements Comparable<Customer> {
    private int id;
    private double balance;
    private String firstName;
    private String lastName;

    // Default constructor
    public Customer() {}

    // Parameterized constructor
    public Customer(int id, double balance, String firstName, String lastName) {
        this.id = id;
        this.balance = balance;
        this.firstName = firstName;
        this.lastName = lastName;
    }

    // Getters and setters
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public double getBalance() {
        return balance;
    }

    public void setBalance(double balance) {
        this.balance = balance;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    // compareTo method to define the sorting criteria
    @Override
    public int compareTo(Customer other) {
        // Compare by First Name
        int firstNameComparison = this.firstName.compareTo(other.firstName);
        if (firstNameComparison != 0) {
            return firstNameComparison;
        }
        // Compare by Last Name
        int lastNameComparison = this.lastName.compareTo(other.lastName);
        if (lastNameComparison != 0) {
            return lastNameComparison;
        }
        // Compare by ID
        int idComparison = Integer.compare(this.id, other.id);
        if (idComparison != 0) {
            return idComparison;
        }
        // Compare by Balance
        return Double.compare(this.balance, other.balance);
    }

    @Override
    public String toString() {
        return "Customer [ID=" + id + ", Balance=" + balance + ", First Name=" + firstName + ", Last Name=" + lastName + "]";
    }
}


public class CustomerApp {
    public static void main(String[] args) {
        // Create a list of customers
        List<Customer> customers = new ArrayList<>();

        // Adding customers to the list
        customers.add(new Customer(3, 2500.75, "John", "Doe"));
        customers.add(new Customer(1, 1000.50, "Jane", "Smith"));
        customers.add(new Customer(2, 3000.00, "Alice", "Johnson"));
        customers.add(new Customer(4, 500.00, "Jane", "Adams"));
        customers.add(new Customer(5, 1500.00, "John", "Smith"));

        // Print unsorted customers
        System.out.println("Unsorted Customers:");
        for (Customer customer : customers) {
            System.out.println(customer);
        }

        // Sort customers using the natural order defined in Customer
        Collections.sort(customers);

        // Print sorted customers
        System.out.println("\nSorted Customers:");
        for (Customer customer : customers) {
            System.out.println(customer);
        }
    }
}
